version: '3.8'
services:
  library:
    build:
      context: .  
      dockerfile: Library/Dockerfile  
    ports:
      - "5000:80"
    environment:
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=library;Username=muharrem;Password=aslan"
      Kafka__BootstrapServers: "kafka:9092"
      Elastic__Uri: "http://elasticsearch:9200"
      Elastic__Username: "elastic"
      Elastic__Password: "PwkDC4KKmTKSA0_z9zI7"
      ASPNETCORE_URLS: "http://0.0.0.0:80"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      elasticsearch:
        condition: service_started
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=PwkDC4KKmTKSA0_z9zI7
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: muharrem
      POSTGRES_PASSWORD: aslan
      POSTGRES_DB: library
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U muharrem -d library"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: